// Generated by CoffeeScript 1.6.1
var Video;

OJP.Video = Video = (function() {

  Video.$container = null;

  Video.type = null;

  Video.embedID = null;

  Video.src = null;

  Video.width = null;

  Video.height = null;

  Video.markup = null;

  Video.playButtonMarkup = null;

  function Video(div) {
    var imgSrc,
      _this = this;
    this.$container = $(div);
    this.type = this.$container.attr("data-type" || "youtube");
    this.embedID = this.$container.attr("data-embed-id");
    this.youtube = "http://www.youtube.com/embed/";
    this.vimeo = "http://player.vimeo.com/video/";
    if (this.$container.attr('data-button-style') === 'dark') {
      imgSrc = '/images/icons/video-play-icon-dark.png';
    } else {
      imgSrc = '/images/icons/video-play-icon.png';
    }
    this.playButtonMarkup = "<div class='overlay'><div class='video-play-button'><img src='" + imgSrc + "'></div></div>";
    switch (this.type) {
      case "youtube":
        this.srcURL = this.youtube;
        break;
      case "vimeo":
        this.srcURL = this.vimeo;
        break;
      default:
        this.srcURL = this.youtube;
    }
    this.src = this.srcURL + this.embedID + "?hd=1&autoplay=1";
    this.width = this.$container.attr("data-width");
    this.height = this.$container.attr("data-height");
    this.markup = "<div class='video-holder'>                <iframe allowfullscreen='1' webkitAllowFullScreen='1' mozallowfullscreen='1' frameborder='0' height='" + this.height + "' width='" + this.width + "' src='" + this.src + "' />              </div>";
    this.$container.click(function() {
      return _this.$container.html(_this.markup);
    });
    this.$container.append(this.playButtonMarkup);
    this.$container.addClass('state-poster');
    this.posterHTML = $('img', this.$container);
  }

  Video.prototype.stopPlayback = function() {
    $('.video-holder').detach();
    this.$container.append(this.playButtonMarkup);
    this.$container.append(this.posterHTML);
    return this.$container.addClass('state-poster');
  };

  return Video;

})();

$(function() {
  return $(".ojp-video").each(function() {
    var ojpVideo;
    return ojpVideo = new OJP.Video(this);
  });
});
