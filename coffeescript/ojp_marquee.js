// Generated by CoffeeScript 1.3.3
(function() {
  var Events, Utils, module,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  module = function(name) {
    return window[name] = window[name] || {};
  };

  module("OJP");

  module("Insitu");

  $(function() {
    new OJP.Utils();
    new Insitu.Events();
    return $(".ojp-marquee").each(function() {
      return new OJP.Marquee($(this));
    });
  });

  Insitu.Events = Events = (function() {

    function Events() {
      this.resize = __bind(this.resize, this);
      this.initNav();
      this.timeoutInterval = 100;
      this.initVideos();
    }

    Events.prototype.initNav = function() {
      var _events,
        _this = this;
      _events = this;
      $("#alt-nav").each(function() {
        return $(this).change(function() {
          var select;
          select = $(this)[0];
          return location.href = select.options[select.selectedIndex].value;
        });
      });
      $("nav#primary li").each(function() {
        var nav_id;
        if (OJP.Utils.browser.is_mobile) {
          $("a", $(this)).attr("href", "");
          $("a", $(this)).click(function() {
            return false;
          });
        }
        nav_id = $(this).attr("id").substr(4);
        return $(this).hover(function() {
          window.clearTimeout(_events.timeout);
          _events.clearHoverStates();
          $("#subnav-" + nav_id).show();
          return $(this).addClass("hover");
        }, function() {
          return _events.timeout = window.setTimeout(_events.hideCallback, _events.timeoutInterval, nav_id);
        });
      });
      $("nav#secondary div.wrap").hover(function() {
        window.clearTimeout(_events.timeout);
        return _events.subnav_over = true;
      }, function() {
        var nav_id;
        _events.subnav_over = false;
        nav_id = $(this).attr("id").substr(7);
        return _events.hideCallback(nav_id);
      });
      $('.nav-close-btn').each(function() {
        var id;
        id = $(this).parent().parent()[0].id.substr(3);
        return $(this).bind('touchstart', function(e) {
          e.cancelBubble = true;
          e.stopPropagation();
          $("#" + id).removeClass("hover");
          return $(this).parent().parent().css("display", "none");
        });
      });
      $('.print-button button').click(function() {
        return window.print();
      });
      return $("#subnav-regions").each(function() {
        var getClassName, outRegionMap, outRegionsList, overRegionMap, overRegionsList;
        $("#nav-regions-list h3 a").each(function() {
          return $(this).hover(function() {
            return overRegionsList($(this));
          }, function() {
            return outRegionsList($(this));
          });
        });
        overRegionsList = function($el) {
          var class_name;
          class_name = $el.attr("class");
          return $("#regions-map div." + class_name + " a").addClass("hover");
        };
        outRegionsList = function($el) {
          var class_name;
          class_name = $el.attr("class");
          return $("#regions-map div." + class_name + " a").removeClass("hover");
        };
        $("#regions-map div").each(function() {
          return $(this).hover(function() {
            return overRegionMap($(this));
          }, function() {
            return outRegionMap($(this));
          });
        });
        overRegionMap = function($el) {
          var class_name;
          class_name = getClassName($el);
          return $('#nav-regions-list a.' + class_name).addClass("hover");
        };
        outRegionMap = function($el) {
          var class_name;
          class_name = getClassName($el);
          return $('#nav-regions-list a.' + class_name).removeClass("hover");
        };
        return getClassName = function($el) {
          var class_name, match, re;
          re = /nav-region-(\S+)/;
          class_name = $el.attr("class");
          match = class_name.match(re);
          if (match) {
            return class_name = match[0];
          }
        };
      });
    };

    Events.prototype.hideCallback = function(nav_id) {
      var $nav_el, $subnav_el;
      if (!this.subnav_over) {
        $subnav_el = $("#subnav-" + nav_id);
        $nav_el = $("#nav-" + nav_id);
        $subnav_el.hide();
        return $nav_el.removeClass("hover");
      }
    };

    Events.prototype.clearHoverStates = function() {
      $("nav#primary li").each(function() {
        return $(this).removeClass("hover");
      });
      return $("nav#secondary div.wrap").each(function() {
        return $(this).css("display", "none");
      });
    };

    Events.prototype.resize = function() {
      return $('.video').each(function() {
        this.cur_width = $(this).width();
        this.max_width = $(this).attr("data-max-width");
        this.ratio = $(this).attr("data-ratio");
        this.height = Math.floor(Math.min(this.cur_width, this.max_width) * this.ratio);
        return $(this).height(this.height);
      });
    };

    Events.prototype.initVideos = function() {
      var _this = this;
      if ($('.video').length > 0) {
        $(window).resize(function() {
          return _this.resize();
        });
        return this.resize();
      }
    };

    return Events;

  })();

  OJP.Utils = Utils = (function() {

    Utils.get_browser = function() {
      var b;
      b = {};
      if (navigator.userAgent.toLowerCase().indexOf("mobile") > -1) {
        b.is_mobile = true;
      }
      if (b.is_mobile && navigator.userAgent.toLowerCase().indexOf("applewebkit") > -1) {
        b.is_ios = true;
      }
      if (navigator.userAgent.toLowerCase().indexOf("phone") > -1) {
        b.is_phone = true;
      }
      if (navigator.userAgent.toLowerCase().indexOf("ipad") > -1) {
        b.is_ipad = true;
      }
      return b;
    };

    Utils.browser = Utils.get_browser();

    function Utils() {
      this.site_utils();
      if (OJP.Utils.browser.is_mobile) {
        $('body').addClass("is_mobile");
      }
    }

    Utils.prototype.site_utils = function() {
      $(".placeholder").each(function() {
        var $this, defaultTxt, input;
        $this = $(this);
        input = document.createElement('input');
        if (__indexOf.call(input, 'placeholder') < 0) {
          defaultTxt = $this.attr("placeholder");
          $this.val(defaultTxt);
          $this.addClass("blurred");
          $this.focus(function() {
            if ($this.val() === defaultTxt) {
              $this.val('');
              return $this.removeClass("blurred");
            }
          });
          return $this.blur(function() {
            if ($this.val() === "") {
              $this.val(defaultTxt);
              return $this.addClass("blurred");
            }
          });
        }
      });
      $("a.tel").each(function() {
        var href, num;
        if (Utils.browser.is_phone) {
          num = $(this).text();
          num = num.replace(/(\.|-|\)|\(|\s)/g, "");
          if (num.indexOf("+") > -1) {
            href = "tel://" + num;
          } else {
            href = "tel://1-" + num;
          }
          return $(this).attr("href", href);
        }
      });
      return $("a.file").each(function() {
        var ext, filetypes, href, k, v, _results;
        filetypes = {
          pdf: ["pdf"],
          doc: ["doc", "docx"],
          xls: ["xls", "xlsx"],
          txt: ["txt"],
          zip: ["zip"]
        };
        href = $(this)[0].href;
        ext = href.match(/(?!\.)[a-zA-Z]{3,4}$/);
        if (ext) {
          ext = ext[0];
          _results = [];
          for (k in filetypes) {
            v = filetypes[k];
            if (__indexOf.call(v, ext) >= 0) {
              _results.push($(this).addClass(k));
            } else {
              _results.push(void 0);
            }
          }
          return _results;
        }
      });
    };

    return Utils;

  })();

}).call(this);
