// Generated by CoffeeScript 1.3.3
(function() {
  var Marquee, module,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  module = function(name) {
    return window[name] = window[name] || {};
  };

  module("OJP");

  OJP.Marquee = Marquee = (function() {

    Marquee.prototype.SIZES = [640, 960, 1140];

    function Marquee(container) {
      this.hide = __bind(this.hide, this);

      this.manual_advance = __bind(this.manual_advance, this);

      this.advance = __bind(this.advance, this);
      if (window.navigator.userAgent.indexOf("MSIE 8.0") > -1) {
        this.ie8 = true;
      }
      this.$container = container;
      if (this.$container.attr("data-fade-interval")) {
        this.fade_interval = parseInt(this.$container.attr("data-fade-interval"), 10);
      } else {
        this.fade_interval = 4000;
      }
      this.fade_speed = parseInt(this.$container.attr("data-fade-speed"), 10) || 600;
      if (!(typeof this.$container.attr("data-nav") === "undefined" || this.$container.attr("data-nav") === "false")) {
        this.nav = this.$container.attr("data-nav");
      }
      if (!(typeof this.$container.attr("data-pager") === "undefined" || this.$container.attr("data-pager") === "false")) {
        this.pager = this.$container.attr("data-pager");
      }
      this.ratio = this.$container.attr("data-ratio");
      this.max_width = this.$container.attr("data-max-width");
      this.$divs = this.$container.children("div");
      this.$imgs = this.$divs.children("img");
      if (this.$divs.length === 1) {
        this.nav = false;
        this.pager = false;
      }
      if (this.fade_interval > 0 && this.$divs.length > 1) {
        this.auto_advance = true;
      }
      if (this.auto_advance) {
        this.cycling = true;
      }
      this.cur_width = this.$container.width();
      this.cur_img_width = 0;
      this.cur_fading_index = 0;
      this.fade_amt = 0;
      this.advance_timeout = 0;
      this.init();
    }

    Marquee.prototype.init = function() {
      this.init_current();
      if (this.nav) {
        this.init_nav();
      } else {
        this.$container.addClass("no-nav");
      }
      if (this.pager) {
        this.init_pager();
      } else {
        this.$container.addClass("no-pager");
      }
      return this.init_events();
    };

    Marquee.prototype.init_events = function() {
      var $lis, marquee,
        _this = this;
      $(window).resize(function() {
        return _this.resize();
      });
      if (this.pager) {
        marquee = this;
        $lis = $("ul.ojp-marquee-nav li", this.$container);
        if (this.nav) {
          $lis.splice($lis.length - 1, 1);
          $lis.splice(0, 1);
        }
        return $lis.each(function() {
          var index,
            _this = this;
          index = parseInt($(this).text(), 10) - 1;
          return $(this).click(function() {
            return marquee.pager_clicked(index);
          });
        });
      }
    };

    Marquee.prototype.init_current = function() {
      if (this.$imgs.length > 0) {
        this.cur_img_width = this.best_img_size();
        return this.source_images();
      } else {
        this.$container.height(this.get_height());
        return this.fade_in();
      }
    };

    Marquee.prototype.source_images = function() {
      var img, new_source, _i, _len, _ref, _results,
        _this = this;
      this.loaded = [];
      _ref = this.$imgs;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        img = _ref[_i];
        new_source = "" + ($(img).attr('data-path')) + "_" + this.cur_img_width + "/" + ($(img).attr('data-filename'));
        if (img.src.indexOf(new_source) === -1) {
          window.clearTimeout(this.advance_timeout);
          img.src = new_source;
          if (this.ie8) {
            this.$container.height(this.get_height());
            this.$imgs.css("height", this.$container.height());
          }
          _results.push($(img).load(function(e) {
            _this.loaded.push(e.target.src);
            if (_this.loaded.length === 1) {
              _this.$container.height(_this.get_height());
              if (_this.ie8) {
                _this.$imgs.css("height", _this.$container.height());
              }
            }
            if (_this.loaded.length === _this.$imgs.length) {
              return _this.fade_in();
            }
          }));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Marquee.prototype.best_img_size = function() {
      var best_width, i, size, _i, _len, _ref;
      best_width = this.SIZES[0];
      _ref = this.SIZES;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        size = _ref[i];
        if (size <= this.cur_width) {
          best_width = size;
        }
      }
      return best_width;
    };

    Marquee.prototype.resize = function() {
      this.cur_width = document.documentElement.offsetWidth;
      this.cur_img_width = this.best_img_size();
      this.$container.height(this.get_height());
      if (this.ie8) {
        this.$imgs.css("height", this.$container.height());
      }
      return this.source_images();
    };

    Marquee.prototype.get_height = function() {
      var height;
      if (this.cur_width >= this.max_width) {
        height = Math.floor(this.max_width * this.ratio);
      } else {
        height = Math.floor(this.cur_width * this.ratio);
      }
      return height;
    };

    Marquee.prototype.fade_in = function() {
      var _this = this;
      if (this.auto_advance) {
        $(this.$divs[this.cur_fading_index]).fadeIn(this.fade_speed, function() {
          return _this.advance_timeout = window.setTimeout(_this.advance, _this.fade_interval);
        });
      } else {
        window.clearTimeout(this.advance_timeout);
        $(this.$divs[this.cur_fading_index]).fadeIn(this.fade_speed);
      }
      if (this.pager) {
        $("ul.ojp-marquee-nav li.current", this.$container).removeClass("current");
        if (this.nav) {
          return $($("ul.ojp-marquee-nav li", this.$container)[this.cur_fading_index + 1]).addClass("current");
        } else {
          return $($("ul.ojp-marquee-nav li", this.$container)[this.cur_fading_index]).addClass("current");
        }
      }
    };

    Marquee.prototype.advance = function() {
      window.clearTimeout(this.advance_timeout);
      this.hide();
      if (this.cur_fading_index < this.$divs.length - 1) {
        this.cur_fading_index++;
      } else {
        this.cur_fading_index = 0;
      }
      return this.fade_in();
    };

    Marquee.prototype.retreat = function() {
      window.clearTimeout(this.advance_timeout);
      this.hide();
      if (this.cur_fading_index === 0) {
        this.cur_fading_index = this.$divs.length - 1;
      } else {
        this.cur_fading_index--;
      }
      return this.fade_in();
    };

    Marquee.prototype.manual_advance = function(e, dir) {
      if ($(e.target).hasClass("disabled")) {
        return;
      }
      if (!this.cycling) {
        if ($(e.target).hasClass("next")) {
          $(".ojp-marquee-nav li.prev").removeClass("disabled");
          if ((this.cur_fading_index + 2) === this.$divs.length) {
            $(e.target).addClass("disabled");
          }
        } else {
          $(".ojp-marquee-nav li.next").removeClass("disabled");
          if ((this.cur_fading_index - 1) === 0) {
            $(e.target).addClass("disabled");
          }
        }
      }
      window.clearTimeout(this.advance_timeout);
      this.auto_advance = false;
      if (dir === 1) {
        return this.advance();
      } else {
        return this.retreat();
      }
    };

    Marquee.prototype.pager_clicked = function(index) {
      window.clearTimeout(this.advance_timeout);
      this.auto_advance = false;
      if (index === this.cur_fading_index) {
        return;
      }
      this.hide();
      this.cur_fading_index = index - 1;
      return this.advance();
    };

    Marquee.prototype.hide = function() {
      return $(this.$divs[this.cur_fading_index]).fadeOut(this.fade_speed);
    };

    Marquee.prototype.init_nav = function() {
      var $prev,
        _this = this;
      this.$container.append("<ul class='ojp-marquee-nav'><li class='prev'>Previous</li><li class='next'>Next</li>");
      $prev = $(".ojp-marquee-nav li.prev", this.$container);
      if (!this.cycling) {
        $prev.addClass("disabled");
      }
      $prev.click(function(e) {
        return _this.manual_advance(e, -1);
      });
      return $(".ojp-marquee-nav li.next", this.$container).click(function(e) {
        return _this.manual_advance(e, 1);
      });
    };

    Marquee.prototype.init_pager = function() {
      var $nav_next, div, i, next, pager, _i, _len, _ref;
      if (!this.nav) {
        pager = "<ul class='ojp-marquee-nav'>";
      }
      _ref = this.$divs;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        div = _ref[i];
        if (i === 0) {
          if (this.nav) {
            pager = "<li class='current'>" + (i + 1) + "</li>";
          } else {
            pager += "<li class='current'>" + (i + 1) + "</li>";
          }
        } else {
          pager += "<li>" + (i + 1) + "</li>";
        }
      }
      if (this.nav) {
        $nav_next = $('.ojp-marquee-nav li.next', this.$container);
        next = $('.ojp-marquee-nav li.next', this.$container);
        return $(pager).insertBefore(next);
      } else {
        pager += "</ul>";
        return this.$container.append(pager);
      }
    };

    return Marquee;

  })();

}).call(this);
