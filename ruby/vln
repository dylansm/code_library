#!/usr/bin/env ruby -wKU

class SymLinker
  require 'socket'

  DROPBOX = "#{Dir.home}/Dropbox/usr/local/nginx/conf/sites-available/"

  def initialize
    sudome
    setup_vhost_paths
  end

  private

  def sudome
    if ENV["USER"] != "root"
      exec("sudo #{ENV['_']} #{ARGV.join(' ')}")
    end
  end
  
  def setup_vhost_paths
    # first try to get vhost_name from arguments
    vhost_name = ARGV[0]
    if !vhost_name
      # try vhost from dir name
      vhost_name = "#{File.basename(Dir.getwd).downcase}.dev"
    end

    @vhost_path = "#{DROPBOX}#{vhost_name}"

    if File.exists? @vhost_path
      @vhost_name = vhost_name
    else
      puts "\nTo use this script, please provide a vhost name or run it from the root of a registered vhost.\n\n"
      exit
    end

    symlink_vhost
  end

  def symlink_vhost
    sites_enabled = '/usr/local/nginx/conf/sites-enabled/'
    #first unlink others
    symlinks = Dir.glob("#{sites_enabled}*")
    symlinks.each do |ln| 
      if File.symlink? ln
        File.unlink ln
      end
    end
    #create new
    %x[ln -s #{@vhost_path} #{sites_enabled}#{@vhost_name}]
    reload_nginx
    open_site
  end

  def reload_nginx
    puts "\nReloading nginx...\n"
    %x[kill -HUP `cat /var/run/nginx.pid`]
  end

  def open_site
    ip = local_ip
    puts "Your IP address: #{ip}\n\n"
    %x[open http://#{ip}.xip.io]
  end

  def local_ip
    orig, Socket.do_not_reverse_lookup = Socket.do_not_reverse_lookup, true  # turn off reverse DNS resolution temporarily

    UDPSocket.open do |s|
      s.connect '64.233.187.99', 1 # use system call as if connecting to google
      s.addr.last
    end
  ensure
    Socket.do_not_reverse_lookup = orig
  end

end

vln = SymLinker.new
